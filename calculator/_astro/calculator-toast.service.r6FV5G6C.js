import{A as i}from"./auth.service.CYhfz_Ml.js";import{t as c,a as o,b as l,c as n,d as u}from"./text_unknown_error_occurred.D3589rme.js";class s{static instance=null;apiService=i.getInstance();baseUrl;constructor(){this.baseUrl="/api/v1/calculator"}static getInstance(){return s.instance==null&&(s.instance=new s),this.instance}calculate(t){return this.apiService.post(this.baseUrl+"/calc",t)}calculateInstantResult(t){return this.apiService.post(this.baseUrl+"/calc-instant-result",t)}getResultFormats(t,e,r){return this.apiService.post(this.baseUrl+"/alternative-forms",{calculationConfig:e,resultFormatSettings:r,result:{resultObject:t}})}convertResultToDMS=(t,e={},r={})=>this.apiService.post(this.baseUrl+"/result/to-dms",{calculationConfig:{...e,calculationType:"numeric"},resultFormatSettings:r,result:{resultObject:t}});convertResultToMixedFraction=(t,e={},r={})=>this.apiService.post(this.baseUrl+"/result/to-mixed-fraction",{calculationConfig:{...e,calculationType:"numeric"},resultFormatSettings:r,result:{resultObject:t}});convertResultToSymbolic=(t,e={},r={})=>this.apiService.post(this.baseUrl+"/result/to-symbolic",{calculationConfig:{...e,calculationType:"numeric"},resultFormatSettings:r,result:{resultObject:t}});convertResultToNumeric=(t,e={},r={})=>this.apiService.post(this.baseUrl+"/result/to-numeric",{calculationConfig:{...e,calculationType:"numeric"},resultFormatSettings:r,result:{resultObject:t}});convertLatexToNcalcFx(t){return this.apiService.post(this.baseUrl+"/latex-to-ncalcfx",{latex:t})}convertToInfix(t){return this.apiService.post(this.baseUrl+"/convert/data-to-infix",{inputs:[{format:"LATEX",value:t}]})}ncalcLatexToStandardLatex(t){return this.apiService.post(this.baseUrl+"/convert/data-to-standard-latex",{inputs:[{format:"LATEX",value:t}]})}getUserSetting(){return this.apiService.get(this.baseUrl+"/user-settings")}updateUserSetting(t){return this.apiService.post(this.baseUrl+"/user-settings",t).catch(e=>{})}getHistory(){return this.apiService.get(this.baseUrl+"/calculation-history")}createHistory(t){return this.apiService.post(this.baseUrl+"/calculation-history",t)}deleteHistory(t){return this.apiService.delete(this.baseUrl+"/calculation-history","",{id:t})}deleteAllHistory(){return this.apiService.delete(this.baseUrl+"/calculation-history/delete-all","")}convertStandardLatexToNcalcFxLatexFormat({latex:t}){return this.apiService.post(this.baseUrl+"/latex-to-ncalcfx",{latex:t})}convertTextToNcalcFxLatexFormat({value:t}){return this.apiService.post(this.baseUrl+"/convert/text-to-ncalcfx",{inputs:[{value:t}]})}}const T={FUNCTION_NOT_SUPPORT_IN_MODE:o(),CANNOT_CONVERT_TO_MIXED_FRACTION:l(),CANNOT_CONVERT_TO_DMS:n(),CANNOT_CONVERT_TO_FRACTION:u()};class a{static show(t){try{document.querySelector("calc-toast").show(t)}catch(e){console.error("CalculatorToastService show()",e)}}static showUnknownError(){a.show({message:c(),type:"error"})}}export{s as C,a,T as b};
