var R=(e=>(e.LEFT="LEFT,",e.RIGHT="RIGHT,",e.UP="UP,",e.DOWN="DOWN,",e))(R||{}),t=(e=>(e[e.DEFAULT=0]="DEFAULT",e[e.VARIABLE=1]="VARIABLE",e[e.SCIENTIFIC_CONSTANT=2]="SCIENTIFIC_CONSTANT",e[e.METRIC_CONVERSION=3]="METRIC_CONVERSION",e))(t||{}),_=(e=>(e[e.DEBOUNCE=0]="DEBOUNCE",e[e.IMMEDIATELY=1]="IMMEDIATELY",e))(_||{}),T=(e=>(e[e.ONLY_UPDATE_IF_PRESENT=0]="ONLY_UPDATE_IF_PRESENT",e[e.ALWAYS_UPDATE=1]="ALWAYS_UPDATE",e))(T||{}),l=(e=>(e.PHYSICAL_KEYBOARD="PHYSICAL_KEYBOARD",e.VIRTUAL_KEYBOARD="VIRTUAL_KEYBOARD",e.PROGRAM="PROGRAM",e))(l||{});const r={NUM_0:"0",NUM_1:"1",NUM_2:"2",NUM_3:"3",NUM_4:"4",NUM_5:"5",NUM_6:"6",NUM_7:"7",NUM_8:"8",NUM_9:"9",PLUS:"+",MINUS:"-",DIVIDE:"÷",MULTIPLICATION:"×",EQUAL:"=",DOT:".",INFINITY:"\\infty",COMMAS:",",COLON:":",ANGLE:"\\angle",TERM_SEPARATOR:"\\termseparator",SQRT:"\\sqrt{#0}",CUBE_ROOT:"\\sqrt[3]{#0}",Y_ROOT_OF_X:"\\sqrt[#@]{\\placeholder{}}",ROOT_OF:"#@^{#0}",LOG:"\\log (#0",LOG_A_OF_X:"\\log_{#0} (#1)",LN:"\\ln(#0",PARENTHESES_OPEN:"(",PARENTHESES_CLOSE:")",BRACKET_OPEN:"[",BRACKET_CLOSE:"]",CURLY_BRACKET_OPEN:"{",CURLY_BRACKET_CLOSE:"}",GREATER_THAN:">",LESS_THAN:"<",REPEATING_PART:"\\repeatingpart{#0}",FLOOR:"\\operatorname{Floor}(#0",CEIL:"\\operatorname{Ceiling}(#0",GCD:"\\operatorname{GCD}(#0",LCM:"\\operatorname{LCM}(#0",NPR:"\\npr",NCR:"\\ncr",POL:"\\operatorname{Pol}(#0\\termseparator #1",REC:"\\operatorname{Rec}(#0\\termseparator #1",FACTORIAL:"!",MIXED_NUMBER:"\\mixfraction{#@}{#?}{#?}",FRACTION:"\\frac{#@}{#?}",PERCENT:"\\%",EXP:"\\exponentialE",EXP_TWICE:"EXP_TWICE",MODULE:"\\modulo",INTEGRAL:"\\int_{#0}^{#1} #2 dx",DERIVATIVE:"\\left. \\frac { d } { d x } (#0)\\right|_{x=#1}",LIM:"\\lim_{x\\to#0}(#1)",TEN_POWER_BY_X:"10^{#0}",X_POWER_BY_NEGATIVE_1:"#@^{-1}",X_POWER_BY_2:"#@^{2}",X_POWER_BY_3:"#@^{3}",X_POWER_BY_Y:"#@^{#0}",E_POWER_BY_X:"\\eulerE^{#0}",SUM_X:"\\sum_{x=#1}^{#2} (#0)",PROD_X:"\\prod_{x=#1}^{#2} (#0)",SIN:"\\sin(#0",COS:"\\cos(#0",TAN:"\\tan(#0",COT:"\\cot(#0",ARC_SIN:"\\arcsin(#0",ARC_COS:"\\arccos(#0",ARC_TAN:"\\arctan(#0",ARC_COT:"\\arccot(#0",VARIABLE_A:"\\variable{a}",VARIABLE_B:"\\variable{b}",VARIABLE_C:"\\variable{c}",VARIABLE_D:"\\variable{d}",VARIABLE_E:"\\variable{e}",VARIABLE_Z:"\\variable{z}",VARIABLE_F:"\\variable{f}",VARIABLE_X:"\\variable{x}",VARIABLE_Y:"\\variable{y}",VARIABLE_M:"\\variable{m}",VARIABLE_T:"\\variable{t}",VARIABLE:"\\variable{#1}",CONST_G:"\\constant{G}",CONST:"\\constant{#1}",CONVERSION:"\\conversion{#1}",RAN_INT:"\\operatorname{RandInt}(#0\\termseparator #1",eulerE:"\\eulerE",PI:"π",ARG:"\\operatorname{Arg} (#0",CONJUGATE:"\\operatorname{Conjugate} (#0",RE:"\\operatorname{Re} (#0",IM:"\\operatorname{Im} (#0",ABS:"\\left|#0\\right|",OUT_POLAR:"\\outpolar",OUT_COMPLEX:"\\outcomplex",IMAGINARY_I:"\\imaginaryI",QUOTIENT:"\\quotient",INSERT_DMS_UNIT:"TIME_UNIT",INSERT_INVERT_SIGN:"INVERT_SIGN",DEGREE:"\\degree",MINUTE:"\\minute",SECOND:"\\second",SWITCH_NUMBER_SIGN:"SWITCH_NUMBER_SIGN",DECIMAL_SEPARATOR:"\\decimalsep",SINH:"\\operatorname{Sinh} (#0",COSH:"\\operatorname{Cosh} (#0",TANH:"\\operatorname{Tanh} (#0",COTH:"\\operatorname{Coth} (#0",SECH:"\\operatorname{Sech} (#0",CSCH:"\\operatorname{Csch} (#0",ARC_SINH:"\\operatorname{ArcSinh} (#0",ARC_COSH:"\\operatorname{ArcCosh} (#0",ARC_TANH:"\\operatorname{ArcTanh} (#0",ARC_COTH:"\\operatorname{ArcCoth} (#0",ARC_SECH:"\\operatorname{ArcSech} (#0",ARC_CSCH:"\\operatorname{ArcCsch} (#0",SEC:"\\operatorname{Sec} (#0",ARC_SEC:"\\operatorname{ArcSec} (#0",CSC:"\\operatorname{Csc} (#0",ARC_CSC:"\\operatorname{ArcCsc} (#0",MATRIX_Det:"\\operatorname{Det} (#0",MATRIX_Inverse:"\\operatorname{Inverse} (#0",MATRIX_MatrixRank:"\\operatorname{MatrixRank} (#0",MATRIX_Transpose:"\\operatorname{Transpose} (#0",MATRIX_IdentityMatrix:"\\operatorname{IdentityMatrix} (#0",MATRIX_RowReduce:"\\operatorname{RowReduce} (#0",MATRIX_CharacteristicPolynomial:"\\operatorname{CharacteristicPolynomial} (#0\\termseparator #1)",MATRIX_Diagonal:"\\operatorname{Diagonal} (#0",MATRIX_DiagonalMatrix:"\\operatorname{DiagonalMatrix} (#0",MATRIX_Eigenvalues:"\\operatorname{Eigenvalues} (#0",MATRIX_Eigenvectors:"\\operatorname{Eigenvectors} (#0",MATRIX_LeastSquares:"\\operatorname{LeastSquares} (#0\\termseparator #1)",MATRIX_LinearSolve:"\\operatorname{LinearSolve} (#0\\termseparator #1)",MATRIX_LUDecomposition:"\\operatorname{LUDecomposition} (#0",MATRIX_NullSpace:"\\operatorname{NullSpace} (#0",MATRIX_PseudoInverse:"\\operatorname{PseudoInverse} (#0",MATRIX_SingularValueDecomposition:"\\operatorname{SingularValueDecomposition} (#0"};var n=(e=>(e.a="a",e.b="b",e.c="c",e.d="d",e.z="z",e.f="f",e.x="x",e.y="y",e.m="m",e.t="t",e.Ans="Ans",e.PreAns="PreAns",e))(n||{}),O=(e=>(e.Ans="Ans",e.a="a",e.b="b",e.c="c",e.d="d",e.z="z",e.f="f",e.x="x",e.y="y",e.m="m",e.t="t",e.PreAns="PreAns",e))(O||{});class A{_text;_type;constructor(e){this._text=e.toString(),this._type=e}get text(){return this._text}get type(){return this._type}}class a extends A{constructor(e){super(e)}}var s=(e=>(e.OPERATOR_PLUS="+",e.OPERATOR_MINUS="-",e.OPERATOR_MULTIPLY="×",e.OPERATOR_DIVIDE="÷",e.OPERATOR_FACTORIAL="!",e.OPERATOR_NPR="\\npr",e.OPERATOR_NCR="\\ncr",e.OPERATOR_OUT_POLAR="\\outpolar",e.OPERATOR_OUT_COMPLEX="\\outcomplex",e.PERCENT="\\%",e))(s||{});class I extends a{constructor(){super(s.OPERATOR_PLUS)}}class C extends a{constructor(){super(s.OPERATOR_MINUS)}}class u extends a{constructor(){super(s.OPERATOR_MULTIPLY)}}class p extends a{constructor(){super(s.OPERATOR_DIVIDE)}}class E extends A{constructor(e){super(e)}}class P extends E{constructor(){super(s.OPERATOR_FACTORIAL)}}class c extends A{constructor(e){super(e)}}class N extends c{constructor(){super(s.OPERATOR_OUT_COMPLEX)}}class M extends c{constructor(){super(s.OPERATOR_OUT_POLAR)}}class L extends a{constructor(){super(s.OPERATOR_NPR)}}class S extends a{constructor(){super(s.OPERATOR_NCR)}}class g extends E{constructor(){super(s.PERCENT)}}const i={PLUS:new I,MINUS:new C,MULTIPLY:new u,DIVIDE:new p,FACTORIAL:new P,OUT_COMPLEX:new N,OUT_POLAR:new M,NCR:new S,NPR:new L,PERCENT:new g},m={quickCalculate:"quickCalculate",quickCalculateInstant:"quickCalculateInstant",calculate:"calculate",solve:"solve",primeFactor:"primeFactor",insert:"insert",changeCalculatorMode:"changeCalculatorMode",changeCalculationType:"changeCalculationType",changeAngleUnit:"changeAngleUnit",changeDecimalFormatType:"changeDecimalFormatType",changePrecision:"changePrecision",convertToMixedFraction:"convertToMixedFraction",convertToDMS:"convertToDMS",switchSymbolicAndDecimal:"switchSymbolicAndDecimal",toggleUseDecimalPointSeparator:"toggleUseDecimalPointSeparator",toggleUseIndianStyleOfDigitGrouping:"toggleUseIndianStyleOfDigitGrouping",changeThousandSeparatorChar:"changeThousandSeparatorChar",changeThousandthSeparatorChar:"changeThousandthSeparatorChar",changeCalculatorMainMode:"changeCalculatorMainMode",changeScientificNotationType:"changeScientificNotationType",changePercentCalculationType:"changePercentCalculationType",changeImplicitMultiplication:"changeImplicitMultiplication",resetDefaultSetting:"resetDefaultSetting",copy:"copy",paste:"paste",selectAll:"selectAll",deleteAll:"deleteAll",deleteBackward:"deleteBackward",deleteForward:"deleteForward",clearHistory:"clearHistory",openScientificConstantsDialog:"openScientificConstantsDialog",openMetricConversionsDialog:"openMetricConversionsDialog",openResultFormatDialog:"openResultFormatDialog",openCMPLXDialog:"openCMPLXDialog",openSettingsDialog:"openSettingsDialog",openHypDialog:"openHypDialog",openFeedbackDialog:"openFeedbackDialog",openMatrixDialog:"openMatrixDialog",openInsertMatrixDialog:"openInsertMatrixDialog",openDecimalFormatSettingDialog:"openDecimalFormatSettingDialog",switchLayout:"switchLayout",toggleFullscreen:"toggleFullscreen",cursorMoveLeft:["moveCursor",R.LEFT],cursorMoveRight:["moveCursor",R.RIGHT],cursorMoveUp:["moveCursor",R.UP],cursorMoveDown:["moveCursor",R.DOWN],insertNum0:["insert",r.NUM_0],insertNum1:["insert",r.NUM_1],insertNum2:["insert",r.NUM_2],insertNum3:["insert",r.NUM_3],insertNum4:["insert",r.NUM_4],insertNum5:["insert",r.NUM_5],insertNum6:["insert",r.NUM_6],insertNum7:["insert",r.NUM_7],insertNum8:["insert",r.NUM_8],insertNum9:["insert",r.NUM_9],insertMultiplication:["insert",i.MULTIPLY],insertDivide:["insert",i.DIVIDE],insertPlus:["insert",i.PLUS],insertMinus:["insert",i.MINUS],insertEqual:["insert",r.EQUAL],insertDot:["insert",r.DOT],insertDecimalSeparator:["insert",r.DECIMAL_SEPARATOR],insertInfinity:["insert",r.INFINITY],insertTermSeparator:["insert",r.TERM_SEPARATOR],insertColon:["insert",r.COLON],insertDmsUnit:["insert",r.INSERT_DMS_UNIT],insertInvertNumberSign:["insert",r.INSERT_INVERT_SIGN],insertSqrt:["insert",r.SQRT],insertCubeRoot:["insert",r.CUBE_ROOT],insertRootOf:["insert",r.ROOT_OF],insertYRootOfX:["insert",r.Y_ROOT_OF_X],insertLog:["insert",r.LOG],insertLogAOfB:["insert",r.LOG_A_OF_X],insertLn:["insert",r.LN],insertAbs:["insert",r.ABS],insertFloor:["insert",r.FLOOR],insertCeil:["insert",r.CEIL],insertGCD:["insert",r.GCD],insertLCM:["insert",r.LCM],insertNPR:["insert",i.NPR],insertNCR:["insert",i.NCR],insertPol:["insert",r.POL],insertRec:["insert",r.REC],insertFactorial:["insert",i.FACTORIAL],insertMixedNumber:["insert",r.MIXED_NUMBER],insertFraction:["insert",r.FRACTION],insertQuotient:["insert",r.QUOTIENT],insertPercentage:["insert",i.PERCENT],insertExp:["insert",r.EXP],insertEulerE:["insert",r.eulerE],insertExpTwice:["insert",r.EXP_TWICE],insertIntegral:["insert",r.INTEGRAL],insertDerivative:["insert",r.DERIVATIVE],insertLim:["insert",r.LIM],insertModule:["insert",r.MODULE],insertXPowerByNegative1:["insert",r.X_POWER_BY_NEGATIVE_1],insertXPowerBy2:["insert",r.X_POWER_BY_2],insertXPowerBy3:["insert",r.X_POWER_BY_3],insertXPowerByY:["insert",r.X_POWER_BY_Y],insertEPowerByX:["insert",r.E_POWER_BY_X],insertTenPowerByX:["insert",r.TEN_POWER_BY_X],insertSumX:["insert",r.SUM_X],insertProdX:["insert",r.PROD_X],insertSin:["insert",r.SIN],insertCos:["insert",r.COS],insertTan:["insert",r.TAN],insertCot:["insert",r.COT],insertArcSin:["insert",r.ARC_SIN],insertArcCos:["insert",r.ARC_COS],insertArcTan:["insert",r.ARC_TAN],insertArcCot:["insert",r.ARC_COT],insertRanInt:["insert",r.RAN_INT],stoVariable:"stoVariable",clearAllVariableValue:"clearAllVariableValue",insertScientificConstant:"insertScientificConstant",insertMetricConversion:"insertMetricConversion",scrollInputLeft:"scrollInputLeft",scrollInputRight:"scrollInputRight",insertPi:["insert",r.PI],insertImaginaryI:["insert",r.IMAGINARY_I],insertPolar:["insert",r.ANGLE],insertVariableA:["insert",n.a,{valueType:t.VARIABLE}],insertVariableB:["insert",n.b,{valueType:t.VARIABLE}],insertVariableC:["insert",n.c,{valueType:t.VARIABLE}],insertVariableD:["insert",n.d,{valueType:t.VARIABLE}],insertVariableZ:["insert",n.z,{valueType:t.VARIABLE}],insertVariableF:["insert",n.f,{valueType:t.VARIABLE}],insertVariableX:["insert",n.x,{valueType:t.VARIABLE}],insertVariableY:["insert",n.y,{valueType:t.VARIABLE}],insertVariableM:["insert",n.m,{valueType:t.VARIABLE}],insertVariableT:["insert",n.t,{valueType:t.VARIABLE}],insertVariableAns:["insert",n.Ans,{valueType:t.VARIABLE}],insertVariablePreAns:["insert",n.PreAns,{valueType:t.VARIABLE}],insertVariableRandReal:["insert","randreal",{valueType:t.VARIABLE}],insertOutPolar:["insert",i.OUT_POLAR],insertOutComplex:["insert",i.OUT_COMPLEX],insertCurlyBracketOpen:["insert",r.CURLY_BRACKET_OPEN],insertCurlyBracketClose:["insert",r.CURLY_BRACKET_CLOSE],insertBracketOpen:["insert",r.BRACKET_OPEN],insertBracketClose:["insert",r.BRACKET_CLOSE],insertParenthesesOpen:["insert",r.PARENTHESES_OPEN],insertParenthesesClose:["insert",r.PARENTHESES_CLOSE],insertRepeatingPart:["insert",r.REPEATING_PART],insertGreaterThan:["insert",r.GREATER_THAN],insertLessThan:["insert",r.LESS_THAN],calculateMPlus:"calculateMPlus",calculateMMinus:"calculateMMinus",undo:"undo",redo:"redo"};export{m as C,t as I,r as M,E as P,A as T,T as U,n as V,l as a,s as b,a as c,c as d,_ as e,i as f,R as g,O as h};